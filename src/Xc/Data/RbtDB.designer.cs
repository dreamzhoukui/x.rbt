#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rbt.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="x.rbt")]
	public partial class RbtDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insertx_logon(x_logon instance);
    partial void Updatex_logon(x_logon instance);
    partial void Deletex_logon(x_logon instance);
    partial void Insertx_buy(x_buy instance);
    partial void Updatex_buy(x_buy instance);
    partial void Deletex_buy(x_buy instance);
    partial void Insertx_task(x_task instance);
    partial void Updatex_task(x_task instance);
    partial void Deletex_task(x_task instance);
    partial void Insertx_contact(x_contact instance);
    partial void Updatex_contact(x_contact instance);
    partial void Deletex_contact(x_contact instance);
    partial void Insertx_group(x_group instance);
    partial void Updatex_group(x_group instance);
    partial void Deletex_group(x_group instance);
    partial void Insertx_order(x_order instance);
    partial void Updatex_order(x_order instance);
    partial void Deletex_order(x_order instance);
    partial void Insertx_store(x_store instance);
    partial void Updatex_store(x_store instance);
    partial void Deletex_store(x_store instance);
    partial void Insertx_user(x_user instance);
    partial void Updatex_user(x_user instance);
    partial void Deletex_user(x_user instance);
    partial void Insertx_dict(x_dict instance);
    partial void Updatex_dict(x_dict instance);
    partial void Deletex_dict(x_dict instance);
    #endregion
		
		public RbtDBDataContext() : 
				base(global::Rbt.Data.Properties.Settings.Default.x_rbtConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RbtDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RbtDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RbtDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RbtDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<x_logon> x_logon
		{
			get
			{
				return this.GetTable<x_logon>();
			}
		}
		
		public System.Data.Linq.Table<x_buy> x_buy
		{
			get
			{
				return this.GetTable<x_buy>();
			}
		}
		
		public System.Data.Linq.Table<x_task> x_task
		{
			get
			{
				return this.GetTable<x_task>();
			}
		}
		
		public System.Data.Linq.Table<x_contact> x_contact
		{
			get
			{
				return this.GetTable<x_contact>();
			}
		}
		
		public System.Data.Linq.Table<x_group> x_group
		{
			get
			{
				return this.GetTable<x_group>();
			}
		}
		
		public System.Data.Linq.Table<x_order> x_order
		{
			get
			{
				return this.GetTable<x_order>();
			}
		}
		
		public System.Data.Linq.Table<x_store> x_store
		{
			get
			{
				return this.GetTable<x_store>();
			}
		}
		
		public System.Data.Linq.Table<x_user> x_user
		{
			get
			{
				return this.GetTable<x_user>();
			}
		}
		
		public System.Data.Linq.Table<x_dict> x_dict
		{
			get
			{
				return this.GetTable<x_dict>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.x_logon")]
	public partial class x_logon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _logon_id;
		
		private string _code;
		
		private string _uuid;
		
		private System.Nullable<long> _uin;
		
		private string _openid;
		
		private string _qrcode;
		
		private string _headimg;
		
		private System.Nullable<int> _status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlogon_idChanging(long value);
    partial void Onlogon_idChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnuuidChanging(string value);
    partial void OnuuidChanged();
    partial void OnuinChanging(System.Nullable<long> value);
    partial void OnuinChanged();
    partial void OnopenidChanging(string value);
    partial void OnopenidChanged();
    partial void OnqrcodeChanging(string value);
    partial void OnqrcodeChanged();
    partial void OnheadimgChanging(string value);
    partial void OnheadimgChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    #endregion
		
		public x_logon()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logon_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long logon_id
		{
			get
			{
				return this._logon_id;
			}
			set
			{
				if ((this._logon_id != value))
				{
					this.Onlogon_idChanging(value);
					this.SendPropertyChanging();
					this._logon_id = value;
					this.SendPropertyChanged("logon_id");
					this.Onlogon_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NVarChar(80)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uuid", DbType="NVarChar(64)")]
		public string uuid
		{
			get
			{
				return this._uuid;
			}
			set
			{
				if ((this._uuid != value))
				{
					this.OnuuidChanging(value);
					this.SendPropertyChanging();
					this._uuid = value;
					this.SendPropertyChanged("uuid");
					this.OnuuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uin", DbType="BigInt")]
		public System.Nullable<long> uin
		{
			get
			{
				return this._uin;
			}
			set
			{
				if ((this._uin != value))
				{
					this.OnuinChanging(value);
					this.SendPropertyChanging();
					this._uin = value;
					this.SendPropertyChanged("uin");
					this.OnuinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openid", DbType="NVarChar(64)")]
		public string openid
		{
			get
			{
				return this._openid;
			}
			set
			{
				if ((this._openid != value))
				{
					this.OnopenidChanging(value);
					this.SendPropertyChanging();
					this._openid = value;
					this.SendPropertyChanged("openid");
					this.OnopenidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qrcode", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string qrcode
		{
			get
			{
				return this._qrcode;
			}
			set
			{
				if ((this._qrcode != value))
				{
					this.OnqrcodeChanging(value);
					this.SendPropertyChanging();
					this._qrcode = value;
					this.SendPropertyChanged("qrcode");
					this.OnqrcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_headimg", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string headimg
		{
			get
			{
				return this._headimg;
			}
			set
			{
				if ((this._headimg != value))
				{
					this.OnheadimgChanging(value);
					this.SendPropertyChanging();
					this._headimg = value;
					this.SendPropertyChanged("headimg");
					this.OnheadimgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.x_buy")]
	public partial class x_buy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _buy_id;
		
		private System.Nullable<long> _store_id;
		
		private System.Nullable<long> _user_id;
		
		private System.Nullable<int> _type;
		
		private System.Nullable<int> _less;
		
		private System.Nullable<System.DateTime> _etime;
		
		private System.Nullable<System.DateTime> _ctime;
		
		private System.Nullable<System.DateTime> _ltime;
		
		private EntityRef<x_store> _x_store;
		
		private EntityRef<x_user> _x_user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbuy_idChanging(long value);
    partial void Onbuy_idChanged();
    partial void Onstore_idChanging(System.Nullable<long> value);
    partial void Onstore_idChanged();
    partial void Onuser_idChanging(System.Nullable<long> value);
    partial void Onuser_idChanged();
    partial void OntypeChanging(System.Nullable<int> value);
    partial void OntypeChanged();
    partial void OnlessChanging(System.Nullable<int> value);
    partial void OnlessChanged();
    partial void OnetimeChanging(System.Nullable<System.DateTime> value);
    partial void OnetimeChanged();
    partial void OnctimeChanging(System.Nullable<System.DateTime> value);
    partial void OnctimeChanged();
    partial void OnltimeChanging(System.Nullable<System.DateTime> value);
    partial void OnltimeChanged();
    #endregion
		
		public x_buy()
		{
			this._x_store = default(EntityRef<x_store>);
			this._x_user = default(EntityRef<x_user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_buy_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long buy_id
		{
			get
			{
				return this._buy_id;
			}
			set
			{
				if ((this._buy_id != value))
				{
					this.Onbuy_idChanging(value);
					this.SendPropertyChanging();
					this._buy_id = value;
					this.SendPropertyChanged("buy_id");
					this.Onbuy_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_store_id", DbType="BigInt")]
		public System.Nullable<long> store_id
		{
			get
			{
				return this._store_id;
			}
			set
			{
				if ((this._store_id != value))
				{
					if (this._x_store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstore_idChanging(value);
					this.SendPropertyChanging();
					this._store_id = value;
					this.SendPropertyChanged("store_id");
					this.Onstore_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="BigInt")]
		public System.Nullable<long> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._x_user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Int")]
		public System.Nullable<int> type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_less", DbType="Int")]
		public System.Nullable<int> less
		{
			get
			{
				return this._less;
			}
			set
			{
				if ((this._less != value))
				{
					this.OnlessChanging(value);
					this.SendPropertyChanging();
					this._less = value;
					this.SendPropertyChanged("less");
					this.OnlessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_etime", DbType="DateTime")]
		public System.Nullable<System.DateTime> etime
		{
			get
			{
				return this._etime;
			}
			set
			{
				if ((this._etime != value))
				{
					this.OnetimeChanging(value);
					this.SendPropertyChanging();
					this._etime = value;
					this.SendPropertyChanged("etime");
					this.OnetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ctime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ctime
		{
			get
			{
				return this._ctime;
			}
			set
			{
				if ((this._ctime != value))
				{
					this.OnctimeChanging(value);
					this.SendPropertyChanging();
					this._ctime = value;
					this.SendPropertyChanged("ctime");
					this.OnctimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ltime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ltime
		{
			get
			{
				return this._ltime;
			}
			set
			{
				if ((this._ltime != value))
				{
					this.OnltimeChanging(value);
					this.SendPropertyChanging();
					this._ltime = value;
					this.SendPropertyChanged("ltime");
					this.OnltimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="x_store_x_buy", Storage="_x_store", ThisKey="store_id", OtherKey="store_id", IsForeignKey=true)]
		public x_store x_store
		{
			get
			{
				return this._x_store.Entity;
			}
			set
			{
				x_store previousValue = this._x_store.Entity;
				if (((previousValue != value) 
							|| (this._x_store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._x_store.Entity = null;
						previousValue.x_buy.Remove(this);
					}
					this._x_store.Entity = value;
					if ((value != null))
					{
						value.x_buy.Add(this);
						this._store_id = value.store_id;
					}
					else
					{
						this._store_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("x_store");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="x_user_x_buy", Storage="_x_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public x_user x_user
		{
			get
			{
				return this._x_user.Entity;
			}
			set
			{
				x_user previousValue = this._x_user.Entity;
				if (((previousValue != value) 
							|| (this._x_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._x_user.Entity = null;
						previousValue.x_buy.Remove(this);
					}
					this._x_user.Entity = value;
					if ((value != null))
					{
						value.x_buy.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("x_user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.x_task")]
	public partial class x_task : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _task_id;
		
		private System.Nullable<long> _user_id;
		
		private System.Nullable<long> _store_id;
		
		private string _keys;
		
		private string _content;
		
		private System.Nullable<int> _match;
		
		private System.Nullable<int> _type;
		
		private System.Nullable<int> _status;
		
		private System.Nullable<System.DateTime> _ctime;
		
		private System.Nullable<System.DateTime> _ftime;
		
		private string _remark;
		
		private EntityRef<x_store> _x_store;
		
		private EntityRef<x_user> _x_user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontask_idChanging(long value);
    partial void Ontask_idChanged();
    partial void Onuser_idChanging(System.Nullable<long> value);
    partial void Onuser_idChanged();
    partial void Onstore_idChanging(System.Nullable<long> value);
    partial void Onstore_idChanged();
    partial void OnkeysChanging(string value);
    partial void OnkeysChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OnmatchChanging(System.Nullable<int> value);
    partial void OnmatchChanged();
    partial void OntypeChanging(System.Nullable<int> value);
    partial void OntypeChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    partial void OnctimeChanging(System.Nullable<System.DateTime> value);
    partial void OnctimeChanged();
    partial void OnftimeChanging(System.Nullable<System.DateTime> value);
    partial void OnftimeChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    #endregion
		
		public x_task()
		{
			this._x_store = default(EntityRef<x_store>);
			this._x_user = default(EntityRef<x_user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_task_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long task_id
		{
			get
			{
				return this._task_id;
			}
			set
			{
				if ((this._task_id != value))
				{
					this.Ontask_idChanging(value);
					this.SendPropertyChanging();
					this._task_id = value;
					this.SendPropertyChanged("task_id");
					this.Ontask_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="BigInt")]
		public System.Nullable<long> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._x_user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_store_id", DbType="BigInt")]
		public System.Nullable<long> store_id
		{
			get
			{
				return this._store_id;
			}
			set
			{
				if ((this._store_id != value))
				{
					if (this._x_store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstore_idChanging(value);
					this.SendPropertyChanging();
					this._store_id = value;
					this.SendPropertyChanged("store_id");
					this.Onstore_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keys", DbType="NVarChar(100)")]
		public string keys
		{
			get
			{
				return this._keys;
			}
			set
			{
				if ((this._keys != value))
				{
					this.OnkeysChanging(value);
					this.SendPropertyChanging();
					this._keys = value;
					this.SendPropertyChanged("keys");
					this.OnkeysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_match", DbType="Int")]
		public System.Nullable<int> match
		{
			get
			{
				return this._match;
			}
			set
			{
				if ((this._match != value))
				{
					this.OnmatchChanging(value);
					this.SendPropertyChanging();
					this._match = value;
					this.SendPropertyChanged("match");
					this.OnmatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Int")]
		public System.Nullable<int> type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ctime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ctime
		{
			get
			{
				return this._ctime;
			}
			set
			{
				if ((this._ctime != value))
				{
					this.OnctimeChanging(value);
					this.SendPropertyChanging();
					this._ctime = value;
					this.SendPropertyChanged("ctime");
					this.OnctimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ftime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ftime
		{
			get
			{
				return this._ftime;
			}
			set
			{
				if ((this._ftime != value))
				{
					this.OnftimeChanging(value);
					this.SendPropertyChanging();
					this._ftime = value;
					this.SendPropertyChanged("ftime");
					this.OnftimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="NVarChar(400)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="x_store_x_task", Storage="_x_store", ThisKey="store_id", OtherKey="store_id", IsForeignKey=true)]
		public x_store x_store
		{
			get
			{
				return this._x_store.Entity;
			}
			set
			{
				x_store previousValue = this._x_store.Entity;
				if (((previousValue != value) 
							|| (this._x_store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._x_store.Entity = null;
						previousValue.x_task.Remove(this);
					}
					this._x_store.Entity = value;
					if ((value != null))
					{
						value.x_task.Add(this);
						this._store_id = value.store_id;
					}
					else
					{
						this._store_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("x_store");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="x_user_x_task", Storage="_x_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public x_user x_user
		{
			get
			{
				return this._x_user.Entity;
			}
			set
			{
				x_user previousValue = this._x_user.Entity;
				if (((previousValue != value) 
							|| (this._x_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._x_user.Entity = null;
						previousValue.x_task.Remove(this);
					}
					this._x_user.Entity = value;
					if ((value != null))
					{
						value.x_task.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("x_user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.x_contact")]
	public partial class x_contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _contact_id;
		
		private System.Nullable<long> _user_id;
		
		private System.Nullable<long> _group_id;
		
		private System.Nullable<long> _Uin;
		
		private string _UserName;
		
		private string _NickName;
		
		private System.Nullable<int> _Flag;
		
		private System.Nullable<int> _MemberCount;
		
		private string _Signature;
		
		private string _RemarkName;
		
		private string _HeadImgUrl;
		
		private string _EncryChatRoomId;
		
		private EntityRef<x_user> _x_user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncontact_idChanging(long value);
    partial void Oncontact_idChanged();
    partial void Onuser_idChanging(System.Nullable<long> value);
    partial void Onuser_idChanged();
    partial void Ongroup_idChanging(System.Nullable<long> value);
    partial void Ongroup_idChanged();
    partial void OnUinChanging(System.Nullable<long> value);
    partial void OnUinChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnNickNameChanging(string value);
    partial void OnNickNameChanged();
    partial void OnFlagChanging(System.Nullable<int> value);
    partial void OnFlagChanged();
    partial void OnMemberCountChanging(System.Nullable<int> value);
    partial void OnMemberCountChanged();
    partial void OnSignatureChanging(string value);
    partial void OnSignatureChanged();
    partial void OnRemarkNameChanging(string value);
    partial void OnRemarkNameChanged();
    partial void OnHeadImgUrlChanging(string value);
    partial void OnHeadImgUrlChanged();
    partial void OnEncryChatRoomIdChanging(string value);
    partial void OnEncryChatRoomIdChanged();
    #endregion
		
		public x_contact()
		{
			this._x_user = default(EntityRef<x_user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long contact_id
		{
			get
			{
				return this._contact_id;
			}
			set
			{
				if ((this._contact_id != value))
				{
					this.Oncontact_idChanging(value);
					this.SendPropertyChanging();
					this._contact_id = value;
					this.SendPropertyChanged("contact_id");
					this.Oncontact_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="BigInt")]
		public System.Nullable<long> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._x_user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_id", DbType="BigInt")]
		public System.Nullable<long> group_id
		{
			get
			{
				return this._group_id;
			}
			set
			{
				if ((this._group_id != value))
				{
					this.Ongroup_idChanging(value);
					this.SendPropertyChanging();
					this._group_id = value;
					this.SendPropertyChanged("group_id");
					this.Ongroup_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uin", DbType="BigInt")]
		public System.Nullable<long> Uin
		{
			get
			{
				return this._Uin;
			}
			set
			{
				if ((this._Uin != value))
				{
					this.OnUinChanging(value);
					this.SendPropertyChanging();
					this._Uin = value;
					this.SendPropertyChanged("Uin");
					this.OnUinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(200)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NickName", DbType="NVarChar(400)")]
		public string NickName
		{
			get
			{
				return this._NickName;
			}
			set
			{
				if ((this._NickName != value))
				{
					this.OnNickNameChanging(value);
					this.SendPropertyChanging();
					this._NickName = value;
					this.SendPropertyChanged("NickName");
					this.OnNickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag", DbType="Int")]
		public System.Nullable<int> Flag
		{
			get
			{
				return this._Flag;
			}
			set
			{
				if ((this._Flag != value))
				{
					this.OnFlagChanging(value);
					this.SendPropertyChanging();
					this._Flag = value;
					this.SendPropertyChanged("Flag");
					this.OnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberCount", DbType="Int")]
		public System.Nullable<int> MemberCount
		{
			get
			{
				return this._MemberCount;
			}
			set
			{
				if ((this._MemberCount != value))
				{
					this.OnMemberCountChanging(value);
					this.SendPropertyChanging();
					this._MemberCount = value;
					this.SendPropertyChanged("MemberCount");
					this.OnMemberCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Signature", DbType="NVarChar(800)")]
		public string Signature
		{
			get
			{
				return this._Signature;
			}
			set
			{
				if ((this._Signature != value))
				{
					this.OnSignatureChanging(value);
					this.SendPropertyChanging();
					this._Signature = value;
					this.SendPropertyChanged("Signature");
					this.OnSignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemarkName", DbType="NVarChar(400)")]
		public string RemarkName
		{
			get
			{
				return this._RemarkName;
			}
			set
			{
				if ((this._RemarkName != value))
				{
					this.OnRemarkNameChanging(value);
					this.SendPropertyChanging();
					this._RemarkName = value;
					this.SendPropertyChanged("RemarkName");
					this.OnRemarkNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadImgUrl", DbType="NVarChar(400)")]
		public string HeadImgUrl
		{
			get
			{
				return this._HeadImgUrl;
			}
			set
			{
				if ((this._HeadImgUrl != value))
				{
					this.OnHeadImgUrlChanging(value);
					this.SendPropertyChanging();
					this._HeadImgUrl = value;
					this.SendPropertyChanged("HeadImgUrl");
					this.OnHeadImgUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncryChatRoomId", DbType="NVarChar(400)")]
		public string EncryChatRoomId
		{
			get
			{
				return this._EncryChatRoomId;
			}
			set
			{
				if ((this._EncryChatRoomId != value))
				{
					this.OnEncryChatRoomIdChanging(value);
					this.SendPropertyChanging();
					this._EncryChatRoomId = value;
					this.SendPropertyChanged("EncryChatRoomId");
					this.OnEncryChatRoomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="x_user_x_contact", Storage="_x_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public x_user x_user
		{
			get
			{
				return this._x_user.Entity;
			}
			set
			{
				x_user previousValue = this._x_user.Entity;
				if (((previousValue != value) 
							|| (this._x_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._x_user.Entity = null;
						previousValue.x_contact.Remove(this);
					}
					this._x_user.Entity = value;
					if ((value != null))
					{
						value.x_contact.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("x_user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.x_group")]
	public partial class x_group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _group_id;
		
		private System.Nullable<long> _user_id;
		
		private string _name;
		
		private string _member;
		
		private System.Nullable<long> _uin;
		
		private System.Nullable<System.DateTime> _ctime;
		
		private EntityRef<x_user> _x_user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongroup_idChanging(long value);
    partial void Ongroup_idChanged();
    partial void Onuser_idChanging(System.Nullable<long> value);
    partial void Onuser_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnmemberChanging(string value);
    partial void OnmemberChanged();
    partial void OnuinChanging(System.Nullable<long> value);
    partial void OnuinChanged();
    partial void OnctimeChanging(System.Nullable<System.DateTime> value);
    partial void OnctimeChanged();
    #endregion
		
		public x_group()
		{
			this._x_user = default(EntityRef<x_user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long group_id
		{
			get
			{
				return this._group_id;
			}
			set
			{
				if ((this._group_id != value))
				{
					this.Ongroup_idChanging(value);
					this.SendPropertyChanging();
					this._group_id = value;
					this.SendPropertyChanged("group_id");
					this.Ongroup_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="BigInt")]
		public System.Nullable<long> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._x_user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(40)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_member", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string member
		{
			get
			{
				return this._member;
			}
			set
			{
				if ((this._member != value))
				{
					this.OnmemberChanging(value);
					this.SendPropertyChanging();
					this._member = value;
					this.SendPropertyChanged("member");
					this.OnmemberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uin", DbType="BigInt")]
		public System.Nullable<long> uin
		{
			get
			{
				return this._uin;
			}
			set
			{
				if ((this._uin != value))
				{
					this.OnuinChanging(value);
					this.SendPropertyChanging();
					this._uin = value;
					this.SendPropertyChanged("uin");
					this.OnuinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ctime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ctime
		{
			get
			{
				return this._ctime;
			}
			set
			{
				if ((this._ctime != value))
				{
					this.OnctimeChanging(value);
					this.SendPropertyChanging();
					this._ctime = value;
					this.SendPropertyChanged("ctime");
					this.OnctimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="x_user_x_group", Storage="_x_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public x_user x_user
		{
			get
			{
				return this._x_user.Entity;
			}
			set
			{
				x_user previousValue = this._x_user.Entity;
				if (((previousValue != value) 
							|| (this._x_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._x_user.Entity = null;
						previousValue.x_group.Remove(this);
					}
					this._x_user.Entity = value;
					if ((value != null))
					{
						value.x_group.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("x_user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.x_order")]
	public partial class x_order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _order_id;
		
		private System.Nullable<long> _user_id;
		
		private System.Nullable<int> _buy_way;
		
		private System.Nullable<System.DateTime> _etime;
		
		private System.Nullable<int> _less;
		
		private string _desc;
		
		private System.Nullable<decimal> _amount;
		
		private string _no;
		
		private string _wx_no;
		
		private System.Nullable<System.DateTime> _ctime;
		
		private System.Nullable<int> _status;
		
		private string _err_msg;
		
		private EntityRef<x_user> _x_user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorder_idChanging(long value);
    partial void Onorder_idChanged();
    partial void Onuser_idChanging(System.Nullable<long> value);
    partial void Onuser_idChanged();
    partial void Onbuy_wayChanging(System.Nullable<int> value);
    partial void Onbuy_wayChanged();
    partial void OnetimeChanging(System.Nullable<System.DateTime> value);
    partial void OnetimeChanged();
    partial void OnlessChanging(System.Nullable<int> value);
    partial void OnlessChanged();
    partial void OndescChanging(string value);
    partial void OndescChanged();
    partial void OnamountChanging(System.Nullable<decimal> value);
    partial void OnamountChanged();
    partial void OnnoChanging(string value);
    partial void OnnoChanged();
    partial void Onwx_noChanging(string value);
    partial void Onwx_noChanged();
    partial void OnctimeChanging(System.Nullable<System.DateTime> value);
    partial void OnctimeChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    partial void Onerr_msgChanging(string value);
    partial void Onerr_msgChanged();
    #endregion
		
		public x_order()
		{
			this._x_user = default(EntityRef<x_user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="BigInt")]
		public System.Nullable<long> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._x_user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_buy_way", DbType="Int")]
		public System.Nullable<int> buy_way
		{
			get
			{
				return this._buy_way;
			}
			set
			{
				if ((this._buy_way != value))
				{
					this.Onbuy_wayChanging(value);
					this.SendPropertyChanging();
					this._buy_way = value;
					this.SendPropertyChanged("buy_way");
					this.Onbuy_wayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_etime", DbType="DateTime")]
		public System.Nullable<System.DateTime> etime
		{
			get
			{
				return this._etime;
			}
			set
			{
				if ((this._etime != value))
				{
					this.OnetimeChanging(value);
					this.SendPropertyChanging();
					this._etime = value;
					this.SendPropertyChanged("etime");
					this.OnetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_less", DbType="Int")]
		public System.Nullable<int> less
		{
			get
			{
				return this._less;
			}
			set
			{
				if ((this._less != value))
				{
					this.OnlessChanging(value);
					this.SendPropertyChanging();
					this._less = value;
					this.SendPropertyChanged("less");
					this.OnlessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[desc]", Storage="_desc", DbType="NVarChar(400)")]
		public string desc
		{
			get
			{
				return this._desc;
			}
			set
			{
				if ((this._desc != value))
				{
					this.OndescChanging(value);
					this.SendPropertyChanging();
					this._desc = value;
					this.SendPropertyChanged("desc");
					this.OndescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_no", DbType="NVarChar(64)")]
		public string no
		{
			get
			{
				return this._no;
			}
			set
			{
				if ((this._no != value))
				{
					this.OnnoChanging(value);
					this.SendPropertyChanging();
					this._no = value;
					this.SendPropertyChanged("no");
					this.OnnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wx_no", DbType="NVarChar(64)")]
		public string wx_no
		{
			get
			{
				return this._wx_no;
			}
			set
			{
				if ((this._wx_no != value))
				{
					this.Onwx_noChanging(value);
					this.SendPropertyChanging();
					this._wx_no = value;
					this.SendPropertyChanged("wx_no");
					this.Onwx_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ctime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ctime
		{
			get
			{
				return this._ctime;
			}
			set
			{
				if ((this._ctime != value))
				{
					this.OnctimeChanging(value);
					this.SendPropertyChanging();
					this._ctime = value;
					this.SendPropertyChanged("ctime");
					this.OnctimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_err_msg", DbType="NVarChar(400)")]
		public string err_msg
		{
			get
			{
				return this._err_msg;
			}
			set
			{
				if ((this._err_msg != value))
				{
					this.Onerr_msgChanging(value);
					this.SendPropertyChanging();
					this._err_msg = value;
					this.SendPropertyChanged("err_msg");
					this.Onerr_msgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="x_user_x_order", Storage="_x_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public x_user x_user
		{
			get
			{
				return this._x_user.Entity;
			}
			set
			{
				x_user previousValue = this._x_user.Entity;
				if (((previousValue != value) 
							|| (this._x_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._x_user.Entity = null;
						previousValue.x_order.Remove(this);
					}
					this._x_user.Entity = value;
					if ((value != null))
					{
						value.x_order.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("x_user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.x_store")]
	public partial class x_store : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _store_id;
		
		private string _name;
		
		private string _remark;
		
		private string _images;
		
		private System.Nullable<long> _hits;
		
		private System.Nullable<decimal> _price;
		
		private System.Nullable<int> _sway;
		
		private System.Nullable<System.DateTime> _uptime;
		
		private string _murl;
		
		private string _durl;
		
		private System.Nullable<int> _status;
		
		private System.Nullable<int> _verno;
		
		private string _vname;
		
		private EntitySet<x_buy> _x_buy;
		
		private EntitySet<x_task> _x_task;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstore_idChanging(long value);
    partial void Onstore_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void OnimagesChanging(string value);
    partial void OnimagesChanged();
    partial void OnhitsChanging(System.Nullable<long> value);
    partial void OnhitsChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void OnswayChanging(System.Nullable<int> value);
    partial void OnswayChanged();
    partial void OnuptimeChanging(System.Nullable<System.DateTime> value);
    partial void OnuptimeChanged();
    partial void OnmurlChanging(string value);
    partial void OnmurlChanged();
    partial void OndurlChanging(string value);
    partial void OndurlChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    partial void OnvernoChanging(System.Nullable<int> value);
    partial void OnvernoChanged();
    partial void OnvnameChanging(string value);
    partial void OnvnameChanged();
    #endregion
		
		public x_store()
		{
			this._x_buy = new EntitySet<x_buy>(new Action<x_buy>(this.attach_x_buy), new Action<x_buy>(this.detach_x_buy));
			this._x_task = new EntitySet<x_task>(new Action<x_task>(this.attach_x_task), new Action<x_task>(this.detach_x_task));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_store_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long store_id
		{
			get
			{
				return this._store_id;
			}
			set
			{
				if ((this._store_id != value))
				{
					this.Onstore_idChanging(value);
					this.SendPropertyChanging();
					this._store_id = value;
					this.SendPropertyChanged("store_id");
					this.Onstore_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(64)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_images", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string images
		{
			get
			{
				return this._images;
			}
			set
			{
				if ((this._images != value))
				{
					this.OnimagesChanging(value);
					this.SendPropertyChanging();
					this._images = value;
					this.SendPropertyChanged("images");
					this.OnimagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hits", DbType="BigInt")]
		public System.Nullable<long> hits
		{
			get
			{
				return this._hits;
			}
			set
			{
				if ((this._hits != value))
				{
					this.OnhitsChanging(value);
					this.SendPropertyChanging();
					this._hits = value;
					this.SendPropertyChanged("hits");
					this.OnhitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sway", DbType="Int")]
		public System.Nullable<int> sway
		{
			get
			{
				return this._sway;
			}
			set
			{
				if ((this._sway != value))
				{
					this.OnswayChanging(value);
					this.SendPropertyChanging();
					this._sway = value;
					this.SendPropertyChanged("sway");
					this.OnswayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uptime", DbType="DateTime")]
		public System.Nullable<System.DateTime> uptime
		{
			get
			{
				return this._uptime;
			}
			set
			{
				if ((this._uptime != value))
				{
					this.OnuptimeChanging(value);
					this.SendPropertyChanging();
					this._uptime = value;
					this.SendPropertyChanged("uptime");
					this.OnuptimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_murl", DbType="NVarChar(200)")]
		public string murl
		{
			get
			{
				return this._murl;
			}
			set
			{
				if ((this._murl != value))
				{
					this.OnmurlChanging(value);
					this.SendPropertyChanging();
					this._murl = value;
					this.SendPropertyChanged("murl");
					this.OnmurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_durl", DbType="NVarChar(200)")]
		public string durl
		{
			get
			{
				return this._durl;
			}
			set
			{
				if ((this._durl != value))
				{
					this.OndurlChanging(value);
					this.SendPropertyChanging();
					this._durl = value;
					this.SendPropertyChanged("durl");
					this.OndurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_verno", DbType="Int")]
		public System.Nullable<int> verno
		{
			get
			{
				return this._verno;
			}
			set
			{
				if ((this._verno != value))
				{
					this.OnvernoChanging(value);
					this.SendPropertyChanging();
					this._verno = value;
					this.SendPropertyChanged("verno");
					this.OnvernoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vname", DbType="NVarChar(100)")]
		public string vname
		{
			get
			{
				return this._vname;
			}
			set
			{
				if ((this._vname != value))
				{
					this.OnvnameChanging(value);
					this.SendPropertyChanging();
					this._vname = value;
					this.SendPropertyChanged("vname");
					this.OnvnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="x_store_x_buy", Storage="_x_buy", ThisKey="store_id", OtherKey="store_id")]
		public EntitySet<x_buy> x_buy
		{
			get
			{
				return this._x_buy;
			}
			set
			{
				this._x_buy.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="x_store_x_task", Storage="_x_task", ThisKey="store_id", OtherKey="store_id")]
		public EntitySet<x_task> x_task
		{
			get
			{
				return this._x_task;
			}
			set
			{
				this._x_task.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_x_buy(x_buy entity)
		{
			this.SendPropertyChanging();
			entity.x_store = this;
		}
		
		private void detach_x_buy(x_buy entity)
		{
			this.SendPropertyChanging();
			entity.x_store = null;
		}
		
		private void attach_x_task(x_task entity)
		{
			this.SendPropertyChanging();
			entity.x_store = this;
		}
		
		private void detach_x_task(x_task entity)
		{
			this.SendPropertyChanging();
			entity.x_store = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.x_user")]
	public partial class x_user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _user_id;
		
		private System.Nullable<long> _upid;
		
		private string _openid;
		
		private string _nickname;
		
		private string _tel;
		
		private string _name;
		
		private string _email;
		
		private string _addr;
		
		private string _job;
		
		private System.Nullable<int> _sex;
		
		private string _city;
		
		private string _province;
		
		private string _country;
		
		private string _headimg;
		
		private System.Nullable<int> _subscribe;
		
		private string _subscribe_time;
		
		private string _remark;
		
		private System.Nullable<int> _groupid;
		
		private System.Nullable<int> _reward;
		
		private System.Nullable<System.DateTime> _ctime;
		
		private System.Nullable<System.DateTime> _last_time;
		
		private EntitySet<x_buy> _x_buy;
		
		private EntitySet<x_task> _x_task;
		
		private EntitySet<x_contact> _x_contact;
		
		private EntitySet<x_group> _x_group;
		
		private EntitySet<x_order> _x_order;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(long value);
    partial void Onuser_idChanged();
    partial void OnupidChanging(System.Nullable<long> value);
    partial void OnupidChanged();
    partial void OnopenidChanging(string value);
    partial void OnopenidChanged();
    partial void OnnicknameChanging(string value);
    partial void OnnicknameChanged();
    partial void OntelChanging(string value);
    partial void OntelChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnaddrChanging(string value);
    partial void OnaddrChanged();
    partial void OnjobChanging(string value);
    partial void OnjobChanged();
    partial void OnsexChanging(System.Nullable<int> value);
    partial void OnsexChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnprovinceChanging(string value);
    partial void OnprovinceChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OnheadimgChanging(string value);
    partial void OnheadimgChanged();
    partial void OnsubscribeChanging(System.Nullable<int> value);
    partial void OnsubscribeChanged();
    partial void Onsubscribe_timeChanging(string value);
    partial void Onsubscribe_timeChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void OngroupidChanging(System.Nullable<int> value);
    partial void OngroupidChanged();
    partial void OnrewardChanging(System.Nullable<int> value);
    partial void OnrewardChanged();
    partial void OnctimeChanging(System.Nullable<System.DateTime> value);
    partial void OnctimeChanged();
    partial void Onlast_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_timeChanged();
    #endregion
		
		public x_user()
		{
			this._x_buy = new EntitySet<x_buy>(new Action<x_buy>(this.attach_x_buy), new Action<x_buy>(this.detach_x_buy));
			this._x_task = new EntitySet<x_task>(new Action<x_task>(this.attach_x_task), new Action<x_task>(this.detach_x_task));
			this._x_contact = new EntitySet<x_contact>(new Action<x_contact>(this.attach_x_contact), new Action<x_contact>(this.detach_x_contact));
			this._x_group = new EntitySet<x_group>(new Action<x_group>(this.attach_x_group), new Action<x_group>(this.detach_x_group));
			this._x_order = new EntitySet<x_order>(new Action<x_order>(this.attach_x_order), new Action<x_order>(this.detach_x_order));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upid", DbType="BigInt")]
		public System.Nullable<long> upid
		{
			get
			{
				return this._upid;
			}
			set
			{
				if ((this._upid != value))
				{
					this.OnupidChanging(value);
					this.SendPropertyChanging();
					this._upid = value;
					this.SendPropertyChanged("upid");
					this.OnupidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openid", DbType="NVarChar(64)")]
		public string openid
		{
			get
			{
				return this._openid;
			}
			set
			{
				if ((this._openid != value))
				{
					this.OnopenidChanging(value);
					this.SendPropertyChanging();
					this._openid = value;
					this.SendPropertyChanged("openid");
					this.OnopenidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nickname", DbType="NVarChar(80)")]
		public string nickname
		{
			get
			{
				return this._nickname;
			}
			set
			{
				if ((this._nickname != value))
				{
					this.OnnicknameChanging(value);
					this.SendPropertyChanging();
					this._nickname = value;
					this.SendPropertyChanged("nickname");
					this.OnnicknameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="NVarChar(20)")]
		public string tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addr", DbType="NVarChar(200)")]
		public string addr
		{
			get
			{
				return this._addr;
			}
			set
			{
				if ((this._addr != value))
				{
					this.OnaddrChanging(value);
					this.SendPropertyChanging();
					this._addr = value;
					this.SendPropertyChanged("addr");
					this.OnaddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job", DbType="NVarChar(50)")]
		public string job
		{
			get
			{
				return this._job;
			}
			set
			{
				if ((this._job != value))
				{
					this.OnjobChanging(value);
					this.SendPropertyChanging();
					this._job = value;
					this.SendPropertyChanged("job");
					this.OnjobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="Int")]
		public System.Nullable<int> sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnsexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("sex");
					this.OnsexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(20)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province", DbType="NVarChar(20)")]
		public string province
		{
			get
			{
				return this._province;
			}
			set
			{
				if ((this._province != value))
				{
					this.OnprovinceChanging(value);
					this.SendPropertyChanging();
					this._province = value;
					this.SendPropertyChanged("province");
					this.OnprovinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="NVarChar(100)")]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_headimg", DbType="NVarChar(200)")]
		public string headimg
		{
			get
			{
				return this._headimg;
			}
			set
			{
				if ((this._headimg != value))
				{
					this.OnheadimgChanging(value);
					this.SendPropertyChanging();
					this._headimg = value;
					this.SendPropertyChanged("headimg");
					this.OnheadimgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subscribe", DbType="Int")]
		public System.Nullable<int> subscribe
		{
			get
			{
				return this._subscribe;
			}
			set
			{
				if ((this._subscribe != value))
				{
					this.OnsubscribeChanging(value);
					this.SendPropertyChanging();
					this._subscribe = value;
					this.SendPropertyChanged("subscribe");
					this.OnsubscribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subscribe_time", DbType="NVarChar(20)")]
		public string subscribe_time
		{
			get
			{
				return this._subscribe_time;
			}
			set
			{
				if ((this._subscribe_time != value))
				{
					this.Onsubscribe_timeChanging(value);
					this.SendPropertyChanging();
					this._subscribe_time = value;
					this.SendPropertyChanged("subscribe_time");
					this.Onsubscribe_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remark", DbType="NVarChar(400)")]
		public string remark
		{
			get
			{
				return this._remark;
			}
			set
			{
				if ((this._remark != value))
				{
					this.OnremarkChanging(value);
					this.SendPropertyChanging();
					this._remark = value;
					this.SendPropertyChanged("remark");
					this.OnremarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_groupid", DbType="Int")]
		public System.Nullable<int> groupid
		{
			get
			{
				return this._groupid;
			}
			set
			{
				if ((this._groupid != value))
				{
					this.OngroupidChanging(value);
					this.SendPropertyChanging();
					this._groupid = value;
					this.SendPropertyChanged("groupid");
					this.OngroupidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reward", DbType="Int")]
		public System.Nullable<int> reward
		{
			get
			{
				return this._reward;
			}
			set
			{
				if ((this._reward != value))
				{
					this.OnrewardChanging(value);
					this.SendPropertyChanging();
					this._reward = value;
					this.SendPropertyChanged("reward");
					this.OnrewardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ctime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ctime
		{
			get
			{
				return this._ctime;
			}
			set
			{
				if ((this._ctime != value))
				{
					this.OnctimeChanging(value);
					this.SendPropertyChanging();
					this._ctime = value;
					this.SendPropertyChanged("ctime");
					this.OnctimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_time
		{
			get
			{
				return this._last_time;
			}
			set
			{
				if ((this._last_time != value))
				{
					this.Onlast_timeChanging(value);
					this.SendPropertyChanging();
					this._last_time = value;
					this.SendPropertyChanged("last_time");
					this.Onlast_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="x_user_x_buy", Storage="_x_buy", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<x_buy> x_buy
		{
			get
			{
				return this._x_buy;
			}
			set
			{
				this._x_buy.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="x_user_x_task", Storage="_x_task", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<x_task> x_task
		{
			get
			{
				return this._x_task;
			}
			set
			{
				this._x_task.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="x_user_x_contact", Storage="_x_contact", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<x_contact> x_contact
		{
			get
			{
				return this._x_contact;
			}
			set
			{
				this._x_contact.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="x_user_x_group", Storage="_x_group", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<x_group> x_group
		{
			get
			{
				return this._x_group;
			}
			set
			{
				this._x_group.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="x_user_x_order", Storage="_x_order", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<x_order> x_order
		{
			get
			{
				return this._x_order;
			}
			set
			{
				this._x_order.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_x_buy(x_buy entity)
		{
			this.SendPropertyChanging();
			entity.x_user = this;
		}
		
		private void detach_x_buy(x_buy entity)
		{
			this.SendPropertyChanging();
			entity.x_user = null;
		}
		
		private void attach_x_task(x_task entity)
		{
			this.SendPropertyChanging();
			entity.x_user = this;
		}
		
		private void detach_x_task(x_task entity)
		{
			this.SendPropertyChanging();
			entity.x_user = null;
		}
		
		private void attach_x_contact(x_contact entity)
		{
			this.SendPropertyChanging();
			entity.x_user = this;
		}
		
		private void detach_x_contact(x_contact entity)
		{
			this.SendPropertyChanging();
			entity.x_user = null;
		}
		
		private void attach_x_group(x_group entity)
		{
			this.SendPropertyChanging();
			entity.x_user = this;
		}
		
		private void detach_x_group(x_group entity)
		{
			this.SendPropertyChanging();
			entity.x_user = null;
		}
		
		private void attach_x_order(x_order entity)
		{
			this.SendPropertyChanging();
			entity.x_user = this;
		}
		
		private void detach_x_order(x_order entity)
		{
			this.SendPropertyChanging();
			entity.x_user = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.x_dict")]
	public partial class x_dict : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _dict_id;
		
		private string _code;
		
		private string _img;
		
		private string _name;
		
		private string _jp;
		
		private string _upval;
		
		private string _value;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondict_idChanging(long value);
    partial void Ondict_idChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnimgChanging(string value);
    partial void OnimgChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnjpChanging(string value);
    partial void OnjpChanged();
    partial void OnupvalChanging(string value);
    partial void OnupvalChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    #endregion
		
		public x_dict()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dict_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long dict_id
		{
			get
			{
				return this._dict_id;
			}
			set
			{
				if ((this._dict_id != value))
				{
					this.Ondict_idChanging(value);
					this.SendPropertyChanging();
					this._dict_id = value;
					this.SendPropertyChanged("dict_id");
					this.Ondict_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NVarChar(20)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img", DbType="NVarChar(200)")]
		public string img
		{
			get
			{
				return this._img;
			}
			set
			{
				if ((this._img != value))
				{
					this.OnimgChanging(value);
					this.SendPropertyChanging();
					this._img = value;
					this.SendPropertyChanged("img");
					this.OnimgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jp", DbType="NVarChar(50)")]
		public string jp
		{
			get
			{
				return this._jp;
			}
			set
			{
				if ((this._jp != value))
				{
					this.OnjpChanging(value);
					this.SendPropertyChanging();
					this._jp = value;
					this.SendPropertyChanged("jp");
					this.OnjpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upval", DbType="NVarChar(10)")]
		public string upval
		{
			get
			{
				return this._upval;
			}
			set
			{
				if ((this._upval != value))
				{
					this.OnupvalChanging(value);
					this.SendPropertyChanging();
					this._upval = value;
					this.SendPropertyChanged("upval");
					this.OnupvalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(100)")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
